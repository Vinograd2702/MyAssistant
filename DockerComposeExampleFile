services:
  postgres:
    image: postgres:17.2
    container_name: postgres.17.2
    volumes:
     - $DATA_PATH_HOST/postgresdb:/var/lib/postgresql/data
    restart: always
    environment:
     - TZ=${TIMEZONE}
     - POSTGRES_USER= #POSTGRES_USER
     - POSTGRES_PASSWORD= #POSTGRES_PASSWORD
    ports:
     - 5432:5432
    networks:
      app:
       ipv4_address: 172.18.0.2
     
  pgadmin:
    image: dpage/pgadmin4:8.13.0
    container_name: pgadmin4.8.13.0
    restart: unless-stopped
    depends_on:
     - postgres
    environment:
     - TZ=${TIMEZONE}
     - PGADMIN_DEFAULT_EMAIL= #PGADMIN_DEFAULT_EMAIL
     - PGADMIN_DEFAULT_PASSWORD= #PGADMIN_DEFAULT_PASSWORD
    ports:
     - 9002:80
    volumes:
     - $DATA_PATH_HOST/pgadmin:/var/lib/pgadmin
    networks:
      app:
       ipv4_address: 172.18.0.10

  rabbitmq:
    image: rabbitmq:4.0.4-alpine
    depends_on:
      - postgres
    container_name: rabbitmq-4.0.4-alpine
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER= #RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS= #RABBITMQ_DEFAULT_PASS
    ports:
      - 15672:15672
      - 5672:5672
    volumes: 
      - $DATA_PATH_HOST/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
    networks:
      app:
       ipv4_address: 172.18.0.3

  my-assistant-auth:
    image: authservice:${APPLICATION_TAG}
    depends_on:
      - postgres
      - rabbitmq
    container_name: authservice.${APPLICATION_TAG}
    environment:
      ApplicationTag: ${APPLICATION_TAG}
      ConnectionStrings__Database: #ConnectionStrings__Database like Server=...;Port=...;Database=...;User Id=...;Password=...;
      JwtOptions__SecretKey: ${APPLICATION_JWT_SECRET_KEY}
      JwtOptions__ExpiresHours: "4"
      RabbitMqOptions__HostName: "172.18.0.3"
      RabbitMqOptions__UserName: #RabbitMqOptions__UserName
      RabbitMqOptions__UserPassword: #RabbitMqOptions__UserPassword
      ServicesOptions__DeleteOldRegistrationAttemptsServiceOptions__IsNeedToDeleteOldRA: "true"
      ServicesOptions__DeleteOldRegistrationAttemptsServiceOptions__MinutesOfRALifetime: "60"
      ServicesOptions__DeleteOldRegistrationAttemptsServiceOptions__MinutesToDelay: "1"
      ServicesOptions__IsRegisterUserWithoutWithoutConfirmingEmail: "true"
      Urls__UrlToConfirmEmail: #
      AdminSettingsOptions__Login: # "Login"
      AdminSettingsOptions__EmailAddress: # "EmailAddress"
      AdminSettingsOptions__Pasword: # "Pasword"   
      WebClient__CorsOrigin: ${WEB_CLIENT_CORS_ORIGIN}
    ports:
      - 8081:8080
    volumes:
      - $DATA_PATH_HOST/backend/auth-service/logs:/app/logs
    networks:
     app:
      ipv4_address: 172.18.0.4

  my-assistant-sports:
    image: sportsservice:${APPLICATION_TAG}
    depends_on:
      - postgres
      - rabbitmq
    container_name: sportsservice.${APPLICATION_TAG}
    environment:
      ApplicationTag: ${APPLICATION_TAG}
      ConnectionStrings__Database: #ConnectionStrings__Database like Server=...;Port=...;Database=...;User Id=...;Password=...;
      JwtOptions__SecretKey: ${APPLICATION_JWT_SECRET_KEY}
      JwtOptions__ExpiresHours: "4"
      RabbitMqOptions__HostName: "172.18.0.3"
      RabbitMqOptions__UserName: #RabbitMqOptions__UserName
      RabbitMqOptions__UserPassword: #RabbitMqOptions__UserPassword
      WebClient__CorsOrigin: ${WEB_CLIENT_CORS_ORIGIN}
    ports:
      - 8082:8080
    volumes:
      - $DATA_PATH_HOST/backend/sports-service/logs:/app/logs
    networks:
     app:
      ipv4_address: 172.18.0.5

  my-assistant-web:
    image: webservice:${APPLICATION_TAG}
    depends_on:
      - postgres
      - rabbitmq
    container_name: webservice.${APPLICATION_TAG}
    environment:
      ApplicationTag: ${APPLICATION_TAG}
      REACT_APP_API_URL: "https://my-assistant-dev.ru/api/"
      REACT_APP_AUTH_COOKIE: my-assistant-session
      REACT_APP_USE_NOTIFICATION_FEATURE: "false"
    ports:
      - 3000:3000
    #volumes:
      #- $DATA_PATH_HOST/backend/auth-service/logs:/app/logs
    networks:
     app:
      ipv4_address: 172.18.0.8

  nginx:
    image: nginx:1.26.2-alpine
    depends_on:
      - postgres
      - pgadmin
      - rabbitmq
    container_name: nginx-1.26.2-alpine
    restart: unless-stopped
    ports:
      - 80:8000
      - 443:8001
    volumes:
      - $DATA_PATH_HOST/proxy/nginx.conf:/etc/nginx/nginx.conf
      - $DATA_PATH_HOST/proxy/www/ssl:/var/www/ssl/:ro
    networks:
      app:
       ipv4_address: 172.18.0.9

  #certbot:
  #  image: certbot/certbot:latest
  #  volumes:
  #    - $DATA_PATH_HOST/proxy/ssl/www:/var/www/ssl/:rw
  #    - $DATA_PATH_HOST/proxy/ssl/conf:/etc/letsencrypt/:rw

networks:
  app:
    driver: bridge
    ipam:
     config:
      - subnet: 172.18.0.0/16
        gateway: 172.18.0.1